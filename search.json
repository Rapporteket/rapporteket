[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) 2021 SKDE  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. rapporteket Copyright (C) 2021 SKDE This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"/articles/container_app.html","id":"short-introduction","dir":"Articles","previous_headings":"","what":"Short introduction","title":"Rapporteket as container application","text":"Since 2019 Rapporteket provided R-shiny applications hosted shiny-server. 2025 , applications migrated standalone container applications hosted kubernetes cluster. document proposes methods aim provide agile robust process development deployment throughout application lifecycle. , document also meant primer discussions improvements refinements.","code":""},{"path":"/articles/container_app.html","id":"container-content","dir":"Articles","previous_headings":"","what":"Container content","title":"Rapporteket as container application","text":"set-, registry represented standalone container application Rapporteket, .e. deployment based registry specific container images. However, registries Rapporteket share common set features system environment underlying software (e.g. R). established base container image registry container images built upon. types container images described .","code":""},{"path":"/articles/container_app.html","id":"base-container-image","dir":"Articles","previous_headings":"Container content","what":"Base container image","title":"Rapporteket as container application","text":"image built Ubuntu LTS, common system libraries, R-release common R-packages. Relevant system locale settings also defined image. outset provided rocker/r-verse keeps track whatever applies Ubuntu LTS R-release. Specifications building base image provided corresponding Dockerfile.","code":""},{"path":"/articles/container_app.html","id":"application-container-image","dir":"Articles","previous_headings":"Container content","what":"Application container image","title":"Rapporteket as container application","text":"Registry R-shiny applications added top base image. Source code management registry application hosted Rapporteket organization GitHub respective Dockerfiles building images also resides.","code":""},{"path":"/articles/container_app.html","id":"pipeline-for-continuous-integration-and-delivery-cicd","dir":"Articles","previous_headings":"","what":"Pipeline for continuous integration and delivery (CI/CD)","title":"Rapporteket as container application","text":"ensure changes applications Rapporteket can delivered timely reliable manner specific workflows adopted. Pipelines base image registry applications illustrated .","code":""},{"path":"/articles/container_app.html","id":"cicd-tools-and-methods","dir":"Articles","previous_headings":"","what":"CI/CD tools and methods","title":"Rapporteket as container application","text":"Vulnerability test monitoring container images performed snyk. base container image monitored weekly scans detect emerging threats changes underlying code also scanned part pull requests prevent new vulnerabilities entering main project. Currently, vulnerabilities low medium severity accepted, high critical . code repositories managed GitHub, Github Actions used enforce policies run CI/CD tasks. Execution tasks scheduled triggered code update requests.","code":""},{"path":"/articles/container_app.html","id":"deployment","dir":"Articles","previous_headings":"","what":"Deployment","title":"Rapporteket as container application","text":"summary, deployment registry applications follow two step process development deploy tasks interconnected. first step application image built main branch deployed quality assurance (QA) environment functional testing. successful testing second step can commence corresponding application code tagged release new image built deployed production environment. overall process illustrated details described following sections.","code":""},{"path":"/articles/container_app.html","id":"quality-assurance-qa","dir":"Articles","previous_headings":"Deployment","what":"Quality assurance (QA)","title":"Rapporteket as container application","text":"changes applied main branch application code repository trigger build pipeline successful push new application image Dockerhub image registry. new image tagged name main branch Dockerhub image registry trigger deploy pipeline new image pulled Harbour image registry scanned vulnerabilities. scanning successful, .e. unacceptable security issues identified, summary relevant issues reported development team via Rapporteket standard email inbox. Upon successful vulnerability scanning image deployed QA environment can tested, e.g. end user test team. tests successful release process can commence, QA-loop start . QA deploy step fully automatic trigger changes main code branch.","code":""},{"path":"/articles/container_app.html","id":"production","dir":"Articles","previous_headings":"Deployment","what":"Production","title":"Rapporteket as container application","text":"tests accepted new release version corresponding code made tagged use semantic versioning. new release trigger automated publish pipeline push new image Dockerhub image registry. image tagged according version number code release static “production” tag serve purpose often used latest tag. images pulled Harbour image registry scanned vulnerabilities following exact approach QA process. successful, application image deployed production environment. case roll-back needed, existing image tagged semantic version number may re-tagged static “production” tag. proof concept, roll-back part CI-process either development deployment workflow. Overall, production deploy step may therefore apply automated manual processes. approach may well adjusted meet yet known future demands tighter control change management.","code":""},{"path":"/articles/container_app.html","id":"vulnerability-scanning","dir":"Articles","previous_headings":"Deployment","what":"Vulnerability scanning","title":"Rapporteket as container application","text":", deployment process described case application code changes new version deployed. Since new vulnerabilities may well emerge application image already deployed QA production environment security scanning also run schedule. case new unacceptable threats identified application image left running results vulnerability scanning reported way describe .","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"/articles/generell_informasjon.html","id":"rapporteket","dir":"Articles","previous_headings":"","what":"RAPPORTEKET","title":"Rapporteket, generell informasjon","text":"Rapporteket er en elektronisk resultattjeneste som er tilgjengelig medisinske kvalitetsregistre Tjenesten viser oppdaterte resultater fra registeret og datagrunnlaget oppdateres daglig. Gjennom Rapporteket kan hver registrerende avdeling se egne resultater og sammenligne med resten av landet. Man kan også benytte resultater fra Rapporteket til videre formidling av resultater.","code":""},{"path":"/articles/generell_informasjon.html","id":"innhold","dir":"Articles","previous_headings":"RAPPORTEKET","what":"Innhold","title":"Rapporteket, generell informasjon","text":"Rapporteket er en -line resultattjeneste som 2024 nås gjennom pålogging fra helseregister.. løpet av 2025 vil tjenesten være flyttet til samme portal som registrets innregistreringsløsning slik pålogging da vil skje gjennom FALK. Rapporteket kan benyttes uavhengig av registrets innregistreringsløsning. Rapporteket er bygd opp ved hjelp av statistikkprogrammet R og webpubliseringsverktøyet R-Shiny. programvare er basert på åpen kildekode. R-koden som danner grunlaget registerets Rapporteket-applikasjon, finnes på https://github.com/Rapporteket. Hvert register har sin egen Rapporteket-applikasjon og aktivitet logges. Resultatene genereres på grunnlag av data tilgjengelig fra Registerets database. Det betyr når man skal lage automatisk genererte resultater som figurer og tabeller, må man ta høyde datagrunnlaget er dynamisk (dvs. stadig endring). Resultater vil denne sammenheng først og fremst være figurer og tabeller som oppsummerer data hentet fra registerets datakilde. Det kan også være ferdige rapporter form av et dokument med figurer, tabeller, analyser og tekst (prosa). Rapporter kan settes opp til å sendes ut regelmessig på e-post. Eksempler på resultater, visualiseringer og funksjonalitet Rapporteket-applikasjonen til et register kan inneholde: Figurer hvor man kan gjøre ulike datautvalg, eksempelvis fordeling av en variabel, utvikling tid (per måned/år) eller figurer som sammenligner resultater fra hvert av sykehusene. Registreringsoversikter, status Tabelloversikter, nøkkeltall Dashboard - samling/sammenstilling av oppdatert nøkkelinforasjon registeret på én side. Samlerapport med figurer/tabeller og tekst som brukeren kan laste ned fra Rapporteket eller få tilsendt på e-post. Registeret definerer innholdet samlerapporten (figurer, tabeller, analyser og tekst), hvilket utvalg rapporten skal gjelde og hvor ofte den skal sendes ut. Rapporten er til en hver tid oppdatert med alle data som er overført til Rapportekets database.","code":""},{"path":"/articles/generell_informasjon.html","id":"bestilling","dir":"Articles","previous_headings":"RAPPORTEKET","what":"Bestilling","title":"Rapporteket, generell informasjon","text":"Hvis du ønsker å bestille Rapporteket ditt register er første steg å ta kontakt med Nasjonale Servicemiljø eller Servicemiljøet din region. Servicemiljøet vil bistå registeret med videre bestilling. Spørsmål kan også rettes til rapporteket@skde.. å kunne jobbe med et register, er det viktig det finnes en detaljert variabeldokumentasjon av alle variable registeret, registeret kan formidle hva de ønsker å finne på Rapporteket det aktuelle registeret (bestilling), Dette innebærer å spesifisere hvilke type figurer og tabeller man ønsker, samt hvilke variable som skal visualiseres. Når det konkrete arbeidet starter, er det viktig det er en faglig kontaktperson registeret er tilgjengelig spørsmål, avklaringer og diskusjon. Vi vil være behjelpelige med å komme fram endelig utforming av figurer, tabeller og rapporter. Avhengig av hvordan man blir enige om å dele opparbeidet, vil hele eller deler av resultattjenesten vil komme testversjon ei stund etter ”fysisk” oppstart. Det er da viktig noen fra registeret aktivt bruker testversjon, setter seg inn hvordan systemet fungerer, bruker dataene kritisk og kommer med tilbakemeldig på mulige feil og eventuelle misforståleser mht. funksjonalitet. Det er viktig å være klar statistikeren ikke har medisinsk kompetanse og følgelig ikke har noe grunnlag å vurdere om et resultat ser vettig ut. Det er registeret som definerer hvilke resultater/visualiseringer de ønsker å finne på Rapporteket. En bestilling av Rapporteket må minst inneholde følgende informasjon: Dokumentasjon av variable, dvs. variabelnavn innregistreringsskjema, hvilket navn variabelen har databasen, hvilke verdier en variabel kan ha (koder og tekst), dataformat (tekst, numerisk, dato, osv.) og avhengigheter mellom variablene. En korrekt kodebok vil kunne gi svar på mye av dette. Hvordan variablene henger sammen, dvs. hvordan de eventuelt er innbyrdes avhengige, samt hvordan ulike tabeller skal kobles sammen, må også registeret kunne formidle informasjon om. Kontaktperson(er) – Det er viktig denne personen er tilgjengelig og kan respondere på henvendelser relativt raskt, særlig perioder hvor man har avtalt det skal jobbes med registeret. Bestilling med spesifikasjon (gjerne ei tegning) av hvilke figurer man ønsker, samt hvilke variabler som skal framstilles med denne type figur. Det må også spesifiseres hva man ønsker å kunne filtrere resultatene på, f.eks. tidsperiode, kjønn, alder, diagnose, osv.. Det er svært viktig registeret tenker gjennom hva slags informasjon som er viktig og kan oppgi forutsetninger som ligger til grunn. (F.eks. om man skal utelate pasienter som er overført til andre sykehus ved beregning av liggetid.). Spesifikasjonene må være konkrete. Skal man ha statistiske mål (gjennomsnitt, sd, osv.) eller andeler? Skal andel beregnes med eller uten ukjente? Er noen variable bare aktuelle å vise et gitt utvalg av en annen variabel? Hvordan skal variablene grupperes ulike tabeller eller figurer? Hvilke utvalg skal det være mulig å gjøre? *Registeret kan velge en egen fargepalett sine figurer. Alternativt får man en palett med blåfarger, samt grått og rødt valgt fra “offentliggjøringspaletten”. (Et bestillingskjema noen av figurtypene som tilbys på rapporteket og en beskrivelse av hvordan bestilling kan spesifiseres finner du : [lenker til et regneark] - MÅ SE OM DETTE REGNEARKET FORTSATT ER MULIG Å FINNE…)","code":""},{"path":"/articles/generell_informasjon.html","id":"kostnader","dir":"Articles","previous_headings":"RAPPORTEKET","what":"Kostnader","title":"Rapporteket, generell informasjon","text":"Utvikling av innhold vil fortrinnsvis utføres av en statistiker Servicemiljøet eller hos registeret og således ikke kreve ekstra kostnader form av penger. Men ikke undervurder det kreves kostnader form av tid og engasjement fra registeret. Slike kostnader vil avhenge av registerets kompleksitet og hvor omfattende resultattjeneste man ønsker. Når Rapporteket settes produksjon, påløper det en fast årlig driftsutgift til Norsk Helsenett.","code":""},{"path":"/articles/hva_hvorfor_hvordan.html","id":"hvorfor-trenger-mitt-register-rapporteket","dir":"Articles","previous_headings":"","what":"Hvorfor trenger mitt register Rapporteket?","title":"Rapporteket, hva, hvorfor, hvordan? (FAQ)","text":"å få tilgang til kontinuerlig oppdaterte resultater fra registeret Når man bruker tid på å registrere data, er det viktig å kunne få noe tilbake form av resultater. Alle avdelinger som registrerer vil kunne gå inn på Rapporteket å se på sine resultater. Registeret definerer selv hva det skal være mulighet å se på sitt Rapportek og hvem som få tilgang til resultatene. Man kan også velge å vise ulike deler av Rapporteket til personer med ulike roller. Gjennom Rapporteket kan hver registrerende avdeling se egne resultater og sammenligne med resten av landet. På denne måten kan man også lære av hverandres erfaringer.","code":""},{"path":"/articles/hva_hvorfor_hvordan.html","id":"hva-er-forskjell-på-rapporteket-og-nettsidene-som-viser-kvalitetsindikatorer","dir":"Articles","previous_headings":"","what":"Hva er forskjell på Rapporteket og nettsidene som viser kvalitetsindikatorer?","title":"Rapporteket, hva, hvorfor, hvordan? (FAQ)","text":"På de offentlige nettsidene er det anonymiserte data som ligger til grunn visningene og det er hovedsak resultater fra kvalitetsindikatorer som vises. På Rapporteket kan man prinsippet lage resultater alle variable og vise de resultatene man ønsker. Data Rapporteket oppdateres daglig, mens data på nettsidene oppdateres manuelt, vanligvis ganger året.","code":""},{"path":"/articles/hva_hvorfor_hvordan.html","id":"hva-kan-rapporteket-levere","dir":"Articles","previous_headings":"","what":"Hva kan Rapporteket levere?","title":"Rapporteket, hva, hvorfor, hvordan? (FAQ)","text":"Figurer og tabeller, samt nedlasting av disse Dashboard Pre-definerte rapporter (ferdige dokumenter med oppdaterte resultater). Regelmessig (automatisk) utsending av rapporter.","code":""},{"path":"/articles/hva_hvorfor_hvordan.html","id":"er-rapporteket-bare-for-qreg-registre","dir":"Articles","previous_headings":"","what":"Er Rapporteket bare for QReg-registre?","title":"Rapporteket, hva, hvorfor, hvordan? (FAQ)","text":"Nei.","code":""},{"path":"/articles/hva_hvorfor_hvordan.html","id":"hvordan-går-jeg-fram-for-å-få-rapporteket","dir":"Articles","previous_headings":"","what":"Hvordan går jeg fram for å få Rapporteket?","title":"Rapporteket, hva, hvorfor, hvordan? (FAQ)","text":"Ta kontakt med Nasjonalt Servicemiljø eller Servicemiljøet din region. Videre prosess blir å avklare hvem som skal utvikle innhold på Rapporteket registeret. Fortrinnsvis er dette en statistiker egen region eller registeret.","code":""},{"path":"/articles/hva_hvorfor_hvordan.html","id":"hvor-mye-arbeidtidressurser-vil-det-kreve-fra-registeret-for-å-få-på-plass-rapporteket","dir":"Articles","previous_headings":"","what":"Hvor mye arbeid/tid/ressurser vil det kreve fra registeret for å få på plass Rapporteket?","title":"Rapporteket, hva, hvorfor, hvordan? (FAQ)","text":"Det kommer på hvor mye man ønsker å vise på Rapporteket og hvor komplekst registeret er. Jo mer innhold og jo høyere kompleksitet, desto mer tid og involvering krever dette fra registeret. Vær klar hver gang man gjør ei oppdatering/endring av sin innregistreringsløsning, vil det kreves man har en grundig sjekk av resultater på Rapporteket siden endringene de aller fleste tilfeller, krever tilpasning av koden på Rapporteket.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Edvardsen. Author, maintainer. Lena Ringstad Olsen. Author. Kevin Otto Thon. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Edvardsen , Olsen L, Thon K (2024). rapporteket: Informasjon om Rapporteket. R package version 1.1.0, https://github.com/Rapporteket/rapporteket, https://rapporteket.github.io/rapporteket/index.html.","code":"@Manual{,   title = {rapporteket: Informasjon om Rapporteket},   author = {Are Edvardsen and Lena Ringstad Olsen and Kevin Otto Thon},   year = {2024},   note = {R package version 1.1.0,     https://github.com/Rapporteket/rapporteket},   url = {https://rapporteket.github.io/rapporteket/index.html}, }"},{"path":"/index.html","id":"rapporteket-","dir":"","previous_headings":"","what":"Informasjon om Rapporteket","title":"Informasjon om Rapporteket","text":"Følgende informasjon er tilgjengelig: Kort om Rapporteket / Rapporteket: Short Introduction Rapporteket, hva, hvordan, hvorfor (FAQ) Rapporteket, generell informasjon Det er et mål informasjonen skal være relevant, dekkende og oppdatert. Innspill og kommentarer er derfor svært velkomne.","code":""},{"path":"/index.html","id":"for-utviklere-av-innhold-på-rapporteket-generelt","dir":"","previous_headings":"","what":"For utviklere av innhold på Rapporteket generelt","title":"Informasjon om Rapporteket","text":"Dette er informasjon om Rapporteket vedlikeholdt som en R-pakke. Målgruppen er først og fremst brukere av Rapporteket selv om innholdet også kan være nytting de som utvikler innhold og tjenster på Rapporteket. Spesifikk informasjon om/hvert enkelt register på Rapporteket finnes respektive R-pakker som alle er tilgjengelig på GitHub. Alt innhold på Rapporteket er strukturert R-pakker der koden tilgjengeliggjøres på GitHub. å bidra kreves en github-konto og medlemsskap organisasjonen Rapporteket.","code":""},{"path":"/index.html","id":"for-utviklere-av-dette-prosjektet-rapporteket-spesielt","dir":"","previous_headings":"","what":"For utviklere av dette prosjektet (rapporteket) spesielt","title":"Informasjon om Rapporteket","text":"SKDE har et særlig ansvar å holde denne pakken (rapporteket) oppdatert men også andre kan bidra (eksempelvis gjennom “fork” og “pull request”). Ved å bidra godtar man også de etiske retningslinjene som gjelder prosjektet.","code":""},{"path":"/reference/rapporteket.html","id":null,"dir":"Reference","previous_headings":"","what":"rapporteket: A package containing information regarding Rapporteket — rapporteket","title":"rapporteket: A package containing information regarding Rapporteket — rapporteket","text":"rapporteket package provides information regarding Rapporteket: , get stated, regular use development content. , packages cointaines () R functions","code":""},{"path":"/news/index.html","id":"rapporteket-110","dir":"Changelog","previous_headings":"","what":"rapporteket 1.1.0","title":"rapporteket 1.1.0","text":"CI/CD pipeline docs","code":""},{"path":"/news/index.html","id":"rapporteket-101","dir":"Changelog","previous_headings":"","what":"rapporteket 1.0.1","title":"rapporteket 1.0.1","text":"last minute gist","code":""},{"path":"/news/index.html","id":"rapporteket-100","dir":"Changelog","previous_headings":"","what":"rapporteket 1.0.0","title":"rapporteket 1.0.0","text":"First proper release","code":""}]
