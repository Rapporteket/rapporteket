[{"path":"/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (https://www.contributor-covenant.org), version 1.0.0, available https://contributor-covenant.org/version/1/0/0/.","code":""},{"path":"/articles/ac_generell_informasjon.html","id":"rapporteket","dir":"Articles","previous_headings":"","what":"RAPPORTEKET","title":"Rapporteket, generell informasjon","text":"Rapporteket er en elektronisk resultattjeneste som er tilgjengelig medisinske kvalitetsregistre. mer informasjon om Rapporteket, se kvalitetsregistre.","code":""},{"path":"/articles/ac_generell_informasjon.html","id":"innhold","dir":"Articles","previous_headings":"RAPPORTEKET","what":"Innhold","title":"Rapporteket, generell informasjon","text":"Rapporteket er bygd opp ved hjelp av statistikkprogrammet R og webpubliseringsverktøyet Shiny. programvare er basert på åpen kildekode. R-koden, som danner grunnlaget registerets Rapporteket-applikasjon, finnes på https://github.com/Rapporteket. Hvert register har sin egen Rapporteket-applikasjon. Resultatene genereres på grunnlag av data tilgjengelig fra Registerets database. Det betyr når man skal lage automatisk genererte resultater som figurer og tabeller, må man ta høyde datagrunnlaget er dynamisk (dvs. stadig endring). Resultater vil denne sammenheng først og fremst være figurer og tabeller som oppsummerer data hentet fra registerets datakilde. Det kan også være ferdige rapporter form av et dokument med figurer, tabeller, analyser og tekst (prosa). Rapporter kan settes opp til å sendes ut regelmessig på e-post. Eksempler på resultater, visualiseringer og funksjonalitet Rapporteket-applikasjonen til et register kan inneholde: Figurer hvor man kan gjøre ulike datautvalg, eksempelvis fordeling av en variabel, utvikling tid (per måned/år) eller figurer som sammenligner resultater fra hvert av sykehusene. Registreringsoversikter, status Tabelloversikter, nøkkeltall Dashboard - samling/sammenstilling av oppdatert nøkkelinforasjon registeret på én side. Samlerapport med figurer/tabeller og tekst som brukeren kan laste ned fra Rapporteket eller få tilsendt på e-post. Registeret definerer innholdet samlerapporten (figurer, tabeller, analyser og tekst), hvilket utvalg rapporten skal gjelde og hvor ofte den skal sendes ut. Rapporten er til en hver tid oppdatert med alle data som er overført til Rapportekets database.","code":""},{"path":"/articles/ad_container_app.html","id":"short-introduction","dir":"Articles","previous_headings":"","what":"Short introduction","title":"Rapporteket as container application","text":"Since 2025 Rapporteket provided standalone container applications hosted kubernetes cluster. document proposes methods aim provide agile robust process development deployment throughout application lifecycle. , document also meant primer discussions improvements refinements.","code":""},{"path":"/articles/ad_container_app.html","id":"container-content","dir":"Articles","previous_headings":"","what":"Container content","title":"Rapporteket as container application","text":"set-, registry represented standalone container application Rapporteket, .e. deployment based registry specific container images. However, registries Rapporteket share common set features system environment underlying software. established base container image registry container images built upon. types container images described .","code":""},{"path":"/articles/ad_container_app.html","id":"base-container-image","dir":"Articles","previous_headings":"Container content","what":"Base container image","title":"Rapporteket as container application","text":"image built Ubuntu LTS, common system libraries, R-release common R-packages. Relevant system locale settings also defined image. outset provided rocker/r-verse keeps track whatever applies Ubuntu LTS R-release. Specifications building base image provided corresponding Dockerfile.","code":""},{"path":"/articles/ad_container_app.html","id":"application-container-image","dir":"Articles","previous_headings":"Container content","what":"Application container image","title":"Rapporteket as container application","text":"Registry R-shiny applications added top base image. Source code management registry application hosted Rapporteket organization GitHub respective Dockerfiles building images also resides.","code":""},{"path":"/articles/ad_container_app.html","id":"pipeline-for-continuous-integration-and-delivery-cicd","dir":"Articles","previous_headings":"","what":"Pipeline for continuous integration and delivery (CI/CD)","title":"Rapporteket as container application","text":"ensure changes applications Rapporteket can delivered timely reliable manner specific workflows adopted. Pipelines base image registry applications illustrated .","code":""},{"path":"/articles/ad_container_app.html","id":"cicd-tools-and-methods","dir":"Articles","previous_headings":"","what":"CI/CD tools and methods","title":"Rapporteket as container application","text":"Vulnerability test monitoring container images performed snyk. base container image monitored weekly scans detect emerging threats changes underlying code also scanned part pull requests prevent new vulnerabilities entering main project. Currently, vulnerabilities low medium severity accepted, high critical . code repositories managed GitHub, Github Actions used enforce policies run CI/CD tasks. Execution tasks scheduled triggered code update requests.","code":""},{"path":"/articles/ad_container_app.html","id":"deployment-this-documentation-is-not-up-to-date","dir":"Articles","previous_headings":"","what":"Deployment THIS DOCUMENTATION IS NOT UP TO DATE!","title":"Rapporteket as container application","text":"summary, deployment registry applications follow two step process development deploy tasks interconnected. first step application image built main branch deployed quality assurance (QA) environment functional testing. successful testing second step can commence corresponding application code tagged release new image built deployed production environment. overall process illustrated details described following sections.","code":""},{"path":"/articles/ad_container_app.html","id":"quality-assurance-qa","dir":"Articles","previous_headings":"Deployment THIS DOCUMENTATION IS NOT UP TO DATE!","what":"Quality assurance (QA)","title":"Rapporteket as container application","text":"changes applied main branch application code repository trigger build pipeline successful push new application image Dockerhub image registry. new image tagged name main branch Dockerhub image registry trigger deploy pipeline new image pulled Harbour image registry scanned vulnerabilities. scanning successful, .e. unacceptable security issues identified, summary relevant issues reported development team via Rapporteket standard email inbox. Upon successful vulnerability scanning image deployed QA environment can tested, e.g. end user test team. tests successful release process can commence, QA-loop start . QA deploy step fully automatic trigger changes main code branch.","code":""},{"path":"/articles/ad_container_app.html","id":"production","dir":"Articles","previous_headings":"Deployment THIS DOCUMENTATION IS NOT UP TO DATE!","what":"Production","title":"Rapporteket as container application","text":"tests accepted new release version corresponding code made tagged use semantic versioning. new release trigger automated publish pipeline push new image Dockerhub image registry. image tagged according version number code release static “production” tag serve purpose often used latest tag. images pulled Harbour image registry scanned vulnerabilities following exact approach QA process. successful, application image deployed production environment. case roll-back needed, existing image tagged semantic version number may re-tagged static “production” tag. proof concept, roll-back part CI-process either development deployment workflow. Overall, production deploy step may therefore apply automated manual processes. approach may well adjusted meet yet known future demands tighter control change management.","code":""},{"path":"/articles/ad_container_app.html","id":"vulnerability-scanning","dir":"Articles","previous_headings":"Deployment THIS DOCUMENTATION IS NOT UP TO DATE!","what":"Vulnerability scanning","title":"Rapporteket as container application","text":", deployment process described case application code changes new version deployed. Since new vulnerabilities may well emerge application image already deployed QA production environment security scanning also run schedule. case new unacceptable threats identified application image left running results vulnerability scanning reported way describe .","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lena Ringstad Olsen. Author. Kevin Otto Thon. Author. Ingrid Bondevik. Author. Edvardsen. Author. Arnfinn Hykkerud Steindal. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Olsen L, Thon K, Bondevik , Edvardsen , Steindal (2025). rapporteket: Informasjon om Rapporteket. R package version 2.0.0, https://rapporteket.github.io/rapporteket/index.html.","code":"@Manual{,   title = {rapporteket: Informasjon om Rapporteket},   author = {Lena Ringstad Olsen and Kevin Otto Thon and Ingrid Bondevik and Are Edvardsen and Arnfinn Hykkerud Steindal},   year = {2025},   note = {R package version 2.0.0},   url = {https://rapporteket.github.io/rapporteket/index.html}, }"},{"path":"/index.html","id":"rapporteket-","dir":"","previous_headings":"","what":"Informasjon om Rapporteket","title":"Informasjon om Rapporteket","text":"Følgende informasjon er tilgjengelig: Kort om Rapporteket / Rapporteket: Short Introduction Rapporteket, generell informasjon Det er et mål informasjonen skal være relevant, dekkende og oppdatert. Innspill og kommentarer er derfor svært velkomne.","code":""},{"path":"/index.html","id":"for-utviklere-av-innhold-på-rapporteket-generelt","dir":"","previous_headings":"","what":"For utviklere av innhold på Rapporteket generelt","title":"Informasjon om Rapporteket","text":"Dette er informasjon om Rapporteket vedlikeholdt som en R-pakke. Målgruppen er først og fremst de som utvikler innhold og tjenester på Rapporteket, selv om innholdet også kan være nytting brukere av Rapporteket. Spesifikk informasjon om/hvert enkelt register på Rapporteket finnes respektive R-pakker som alle er tilgjengelig på GitHub. Alt innhold på Rapporteket er strukturert R-pakker der koden tilgjengeliggjøres på GitHub. å bidra kreves en github-konto og medlemsskap organisasjonen Rapporteket.","code":""},{"path":"/index.html","id":"for-utviklere-av-dette-prosjektet-rapporteket-spesielt","dir":"","previous_headings":"","what":"For utviklere av dette prosjektet (rapporteket) spesielt","title":"Informasjon om Rapporteket","text":"SKDE har et særlig ansvar å holde denne pakken (rapporteket) oppdatert men også andre kan bidra (eksempelvis gjennom fork og pull request). Ved å bidra godtar man også de etiske retningslinjene som gjelder prosjektet.","code":""},{"path":"/reference/rapporteket.html","id":null,"dir":"Reference","previous_headings":"","what":"rapporteket: A package containing information regarding Rapporteket — rapporteket","title":"rapporteket: A package containing information regarding Rapporteket — rapporteket","text":"rapporteket package provides information regarding Rapporteket: , get stated, regular use development content. , packages cointaines () R functions","code":""},{"path":"/news/index.html","id":"rapporteket-110","dir":"Changelog","previous_headings":"","what":"rapporteket 1.1.0","title":"rapporteket 1.1.0","text":"CI/CD pipeline docs","code":""},{"path":"/news/index.html","id":"rapporteket-101","dir":"Changelog","previous_headings":"","what":"rapporteket 1.0.1","title":"rapporteket 1.0.1","text":"last minute gist","code":""},{"path":"/news/index.html","id":"rapporteket-100","dir":"Changelog","previous_headings":"","what":"rapporteket 1.0.0","title":"rapporteket 1.0.0","text":"First proper release","code":""}]
